// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	time "time"
)

// DedupOptionsApplyConfiguration represents an declarative configuration of the DedupOptions type for use
// with apply.
type DedupOptionsApplyConfiguration struct {
	DedupMode   *string        `json:"mode,omitempty"`
	DedupWindow *time.Duration `json:"window,omitempty"`
	DedupField  *string        `json:"field,omitempty"`
}

// DedupOptionsApplyConfiguration constructs an declarative configuration of the DedupOptions type for use with
// apply.
func DedupOptions() *DedupOptionsApplyConfiguration {
	return &DedupOptionsApplyConfiguration{}
}

// WithDedupMode sets the DedupMode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DedupMode field is set to the value of the last call.
func (b *DedupOptionsApplyConfiguration) WithDedupMode(value string) *DedupOptionsApplyConfiguration {
	b.DedupMode = &value
	return b
}

// WithDedupWindow sets the DedupWindow field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DedupWindow field is set to the value of the last call.
func (b *DedupOptionsApplyConfiguration) WithDedupWindow(value time.Duration) *DedupOptionsApplyConfiguration {
	b.DedupWindow = &value
	return b
}

// WithDedupField sets the DedupField field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DedupField field is set to the value of the last call.
func (b *DedupOptionsApplyConfiguration) WithDedupField(value string) *DedupOptionsApplyConfiguration {
	b.DedupField = &value
	return b
}
